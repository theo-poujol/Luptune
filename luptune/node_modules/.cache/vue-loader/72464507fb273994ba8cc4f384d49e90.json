{"remainingRequest":"/Users/theopoujol/Documents/Projets/Luptune/luptune/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/theopoujol/Documents/Projets/Luptune/luptune/src/views/CGV.vue?vue&type=template&id=a4520d70&","dependencies":[{"path":"/Users/theopoujol/Documents/Projets/Luptune/luptune/src/views/CGV.vue","mtime":1611852726167},{"path":"/Users/theopoujol/Documents/Projets/Luptune/luptune/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/theopoujol/Documents/Projets/Luptune/luptune/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/theopoujol/Documents/Projets/Luptune/luptune/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/theopoujol/Documents/Projets/Luptune/luptune/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}